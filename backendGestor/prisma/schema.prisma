generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OperartionType {
  I // Income
  E // Expense
}

enum CategoryType{
  V //variavel
  F //fixa
}

model Users{
  id String @id @default(uuid())
  email    String   @unique
  password String
  reports Reports[]
  wallets Wallets[]
  operations Operations[]
  categories Categories[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("users")
}

model Reports{
  id String @id @default(uuid())
  month String
  income Float
  expenses Float
  idUser String  @map("id_user")
  user   Users  @relation(fields: [idUser], references: [id])
  
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("reports")
}

model Wallets{
  id String @id @default(uuid())
  name String
  balance Float
  idUser String  @map("id_user")
  user   Users  @relation(fields: [idUser], references: [id])
  banks Banks?
  operations Operations[]
  
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("wallets")
}

model Banks{
  id String @id @default(uuid())
  name String
  logoUrl String @map("logo_url")
 
  wallet Wallets? @relation(fields: [idWallet], references: [id])
  idWallet String? @unique @map("id_wallet")


  
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("banks")
}

model Operations{
  id String @id @default(uuid())
  description String
  amount Float
  type OperartionType @default(E)
 
  idUser String  @map("id_user")
  user   Users  @relation(fields: [idUser], references: [id])
  
  idWallet String  @map("id_wallet")
  wallet   Wallets  @relation(fields: [idWallet], references: [id])

  idCategory String  @map("id_category")
  category   Categories  @relation(fields: [idCategory], references: [id])
  
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("operations")
}

model Categories{
  id String @id @default(uuid())
  name String
  userId String  @map("user_id")
  user   Users  @relation(fields: [userId], references: [id])
  type CategoryType @default(V)
  operations Operations[]
  
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("categories")
}

